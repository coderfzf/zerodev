version: '3.5'
# 微服务相关配置
networks:
  backend:
    driver: ${NETWORKS_DRIVER}
 
services:
  golang:                                 
    build:
      context: ./services/golang                   
      args:
        - GO_VERSION=${GO_VERSION}
    container_name: golang
    environment:                          
      - TZ=${TZ}
    privileged: true
    volumes:                              
      - ${CODE_PATH_HOST}:/usr/src/code   
      - ${CODE_LOG_DIR}:/user/src/logs
    ports:                                
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "9000:9000"
      - "9001:9001"
      - "9002:9002"
      - "9003:9003"
    stdin_open: true                     # 打开标准输入，可以接受外部输入
    tty: true
    networks:
      - backend
    restart: always                       

  etcd:                                   
    image: bitnami/etcd:${ETCD_VERSION}                   
    container_name: etcd
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:                                
      - "${ETCD_PORT}:2379"
    networks:
      - backend
    restart: always

  etcd-manage:
    image: evildecay/etcdkeeper:latest
    container_name: etcd_manage
    environment:
      - TZ=${TZ}
    ports:
      - "${ETCD_MANAGE_PORT}:8080"                     
    depends_on:                                        
      - etcd                                           
    networks:
      - backend
    restart: always

  prometheus:
    image: bitnami/prometheus:latest
    container_name: promethues
    environment:
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${PROMETHEUS_CONF_FILE}:/opt/bitnami/prometheus/conf/prometheus.yml   
    ports:
      - "${PROMETHEUS_PORT}:9090"                      
    networks:
      - backend
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - TZ=${TZ}
    ports:
      - "${GRAFANA_PORT}:3000"                         
    networks:
      - backend
    restart: always

  jaeger:
    image: jaegertracing/all-in-one:${JAEGER_VERSION}
    container_name: jaeger
    environment:
      - TZ=${TZ}
    ports:
      - "${JAEGER_PORT}:16686"                         
    networks:
      - backend
    restart: always

  dtm:
    image: yedf/dtm:latest
    container_name: dtm
    environment:
      - TZ=${TZ}
    entrypoint:
      - "/app/dtm/dtm"
      - "-c=/app/dtm/configs/config.yaml"
    privileged: true
    volumes:
      - ${DTM_CONF_FILE}:/app/dtm/configs/config.yaml  
    ports:
      - "${DTM_HTTP_PORT}:36789"
      - "${DTM_GRPC_PORT}:36790"
    networks:
      - backend
    restart: always
